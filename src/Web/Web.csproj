<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <RootNamespace>MovieManagementSystem.Web</RootNamespace>
    <AssemblyName>MovieManagementSystem.Web</AssemblyName>
    <SpaRoot>ClientApp\</SpaRoot>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\Application\Application.csproj" />
    <ProjectReference Include="..\Infrastructure\Infrastructure.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Azure.Extensions.AspNetCore.Configuration.Secrets" />
    <PackageReference Include="Azure.Identity" />
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" />
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" />

    <PackageReference Include="Microsoft.AspNetCore.Identity.UI" />

    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" />

    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" />

    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    
    <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" />
    <PackageReference Include="NSwag.AspNetCore" />
    <PackageReference Include="NSwag.MSBuild">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="FluentValidation.AspNetCore" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Areas\Identity\Data\" />
  </ItemGroup>

  <!-- Auto-generated Open API specification and Angular TypeScript clients -->
  <PropertyGroup>
    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
  </PropertyGroup>

  <Target Name="NSwag" AfterTargets="PostBuildEvent" Condition=" '$(Configuration)' == 'Debug' And '$(SkipNSwag)' != 'True' ">
    <Exec ConsoleToMSBuild="true" ContinueOnError="true" WorkingDirectory="$(ProjectDir)" EnvironmentVariables="ASPNETCORE_ENVIRONMENT=Development" Command="$(NSwagExe_Net90) run config.nswag /variables:Configuration=$(Configuration)">
      <Output TaskParameter="ExitCode" PropertyName="NSwagExitCode" />
      <Output TaskParameter="ConsoleOutput" PropertyName="NSwagOutput" />
    </Exec>

    <Message Text="$(NSwagOutput)" Condition="'$(NSwagExitCode)' == '0'" Importance="low" />
    <Error Text="$(NSwagOutput)" Condition="'$(NSwagExitCode)' != '0'" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
	  <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
	  <Exec WorkingDirectory="$(SpaRoot)" Command="pnpm install" />
	  <Exec WorkingDirectory="$(SpaRoot)" Command="pnpm run build" />

	  <!-- Include the newly-built files in the publish output -->
	  <ItemGroup>
		<DistFiles Include="$(SpaRoot)dist\**" />
		<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
		  <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
		  <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
		  <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
		</ResolvedFileToPublish>
	  </ItemGroup>
	</Target>

  <!-- Build React app for development testing -->
  <Target Name="DebugBuildReact" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' ">
    <Message Importance="high" Text="Building React app..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="pnpm install" ContinueOnError="true" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="pnpm run build" ContinueOnError="true" />

    <!-- Copy dist files to wwwroot -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**" />
    </ItemGroup>

    <Copy SourceFiles="@(DistFiles)" DestinationFiles="@(DistFiles->'wwwroot\%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />
  </Target>

</Project>
